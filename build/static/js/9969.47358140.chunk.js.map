{"version":3,"file":"static/js/9969.47358140.chunk.js","mappings":"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","sources":["components/Toast.js","views/menu/EditMenu.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CToast, CToastBody, CToastClose } from '@coreui/react'\n\nconst Toast = ({ color, body }) => {\n  return (\n    <CToast autohide={true} color={color} className=\"text-white align-items-center\" visible={true}>\n      <div className=\"d-flex\">\n        <CToastBody>{body}</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  )\n}\n\nToast.propTypes = {\n  color: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n}\n\nexport default Toast\n","import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CRow,\n  CFormTextarea,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CSpinner,\n} from '@coreui/react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { getMenuById, updateMenu } from 'src/utils/api'\nimport Toast from 'src/components/Toast'\n\nconst EditMenu = () => {\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [toast, addToast] = useState(0)\n\n  const { id } = useParams()\n  const [nama, setNama] = useState('')\n  const [deskripsi, setDeskripsi] = useState('')\n  const [harga, setHarga] = useState('')\n  const [diskon, setDiskon] = useState('')\n  const [tersedia, setTersedia] = useState('1')\n  const [gambar, setGambar] = useState(null)\n\n  useEffect(() => {\n    componentDidMount()\n  }, [])\n\n  const componentDidMount = async () => {\n    await getMenuByIdFunc()\n  }\n\n  const getMenuByIdFunc = async () => {\n    setIsLoading(true)\n    const getMenuByIdReq = await getMenuById(id)\n    setIsLoading(false)\n\n    if (!getMenuByIdReq.success) {\n      addToast(<Toast color=\"danger\" body={getMenuByIdReq.message} />)\n      navigate('/menu/tambah')\n      return\n    }\n\n    setNama(getMenuByIdReq.data.nama)\n    setDeskripsi(getMenuByIdReq.data.detail)\n    setHarga(getMenuByIdReq.data.harga)\n    setDiskon(getMenuByIdReq.data.diskon)\n    setTersedia(getMenuByIdReq.data.tersedia)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n\n    setIsLoading(true)\n\n    const updateMenuReq = await updateMenu({\n      id,\n      nama,\n      deskripsi,\n      harga,\n      diskon,\n      tersedia,\n      gambar,\n    })\n\n    setIsLoading(false)\n\n    if (!updateMenuReq.success) {\n      addToast(<Toast color=\"danger\" body={updateMenuReq.message} />)\n      return\n    }\n    addToast(<Toast color=\"success\" body={updateMenuReq.message} />)\n    navigate('/menu/data')\n  }\n\n  if (isLoading) return <CSpinner color=\"primary\" />\n\n  return (\n    <CRow>\n      <CToaster push={toast} placement=\"top-end\" />\n      <div>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Tambah Menu</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm className=\"row g-3\" onSubmit={handleSubmit}>\n              <CInputGroup>\n                <CFormInput\n                  size=\"2\"\n                  type=\"text\"\n                  required\n                  placeholder=\"Nama Menu\"\n                  onChange={(e) => {\n                    setNama(e.target.value)\n                  }}\n                  value={nama}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormTextarea\n                  placeholder=\"Deskripsi\"\n                  id=\"exampleFormControlTextarea1\"\n                  rows=\"3\"\n                  onChange={(e) => {\n                    setDeskripsi(e.target.value)\n                  }}\n                  value={deskripsi}\n                ></CFormTextarea>\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  type=\"number\"\n                  required\n                  placeholder=\"Harga\"\n                  onChange={(e) => {\n                    setHarga(e.target.value)\n                  }}\n                  value={harga}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  type=\"number\"\n                  required\n                  placeholder=\"Diskon\"\n                  onChange={(e) => {\n                    setDiskon(e.target.value)\n                  }}\n                  value={diskon}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CInputGroupText component=\"label\" htmlFor=\"ketersediaan\">\n                  Ketersediaan\n                </CInputGroupText>\n                <CFormSelect\n                  placeholder=\"Ketersediaan\"\n                  id=\"ketersediaan\"\n                  onChange={(e) => {\n                    setTersedia(e.target.value)\n                  }}\n                  value={tersedia}\n                >\n                  <option value=\"1\">Tersedia</option>\n                  <option value=\"0\">Belum Tersedia</option>\n                </CFormSelect>\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  type=\"file\"\n                  id=\"gambar\"\n                  placeholder=\"Gambar\"\n                  onChange={(e) => {\n                    setGambar(e.target.files[0])\n                  }}\n                />\n                <CInputGroupText component=\"label\" htmlFor=\"gambar\">\n                  Gambar\n                </CInputGroupText>\n              </CInputGroup>\n              <CInputGroup>\n                <CButton color=\"primary\" type=\"submit\">\n                  Simpan\n                </CButton>\n              </CInputGroup>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </div>\n    </CRow>\n  )\n}\n\nexport default EditMenu\n"],"names":["_ref","color","body","_jsx","CToast","autohide","className","visible","children","_jsxs","CToastBody","CToastClose","white","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","toast","addToast","id","useParams","_useState5","_useState6","nama","setNama","_useState7","_useState8","deskripsi","setDeskripsi","_useState9","_useState10","harga","setHarga","_useState11","_useState12","diskon","setDiskon","_useState13","_useState14","tersedia","setTersedia","_useState15","_useState16","gambar","setGambar","useEffect","componentDidMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getMenuByIdFunc","stop","apply","arguments","_ref2","_callee2","getMenuByIdReq","_context2","getMenuById","sent","success","Toast","message","abrupt","data","detail","handleSubmit","_ref3","_callee3","event","updateMenuReq","_context3","preventDefault","currentTarget","checkValidity","stopPropagation","updateMenu","_x","CSpinner","CRow","CToaster","push","placement","CCard","CCardHeader","CCardBody","CForm","onSubmit","CInputGroup","CFormInput","size","type","required","placeholder","onChange","e","target","value","CFormTextarea","rows","CInputGroupText","component","htmlFor","CFormSelect","files","CButton"],"sourceRoot":""}