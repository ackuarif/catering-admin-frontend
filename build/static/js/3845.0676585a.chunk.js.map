{"version":3,"file":"static/js/3845.0676585a.chunk.js","mappings":"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","sources":["components/Toast.js","views/menu/TambahMenu.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CToast, CToastBody, CToastClose } from '@coreui/react'\n\nconst Toast = ({ color, body }) => {\n  return (\n    <CToast autohide={true} color={color} className=\"text-white align-items-center\" visible={true}>\n      <div className=\"d-flex\">\n        <CToastBody>{body}</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  )\n}\n\nToast.propTypes = {\n  color: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n}\n\nexport default Toast\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CRow,\n  CFormTextarea,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CSpinner,\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { addMenu } from 'src/utils/api'\nimport Toast from 'src/components/Toast'\n\nconst TambahMenu = () => {\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [toast, addToast] = useState(0)\n\n  const [nama, setNama] = useState('')\n  const [deskripsi, setDeskripsi] = useState('')\n  const [harga, setHarga] = useState('')\n  const [diskon, setDiskon] = useState('')\n  const [tersedia, setTersedia] = useState('1')\n  const [gambar, setGambar] = useState(null)\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n\n    setIsLoading(true)\n\n    const addMenuReq = await addMenu({\n      nama,\n      deskripsi,\n      harga,\n      diskon,\n      tersedia,\n      gambar,\n    })\n\n    setIsLoading(false)\n\n    if (!addMenuReq.success) {\n      addToast(<Toast color=\"danger\" body={addMenuReq.message} />)\n      return\n    }\n    addToast(<Toast color=\"success\" body={addMenuReq.message} />)\n  }\n\n  if (isLoading) return <CSpinner color=\"primary\" />\n\n  return (\n    <CRow>\n      <CToaster push={toast} placement=\"top-end\" />\n      <div>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Tambah Menu</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm className=\"row g-3\" onSubmit={handleSubmit}>\n              <CInputGroup>\n                <CFormInput\n                  size=\"2\"\n                  type=\"text\"\n                  required\n                  placeholder=\"Nama Menu\"\n                  onChange={(e) => {\n                    setNama(e.target.value)\n                  }}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormTextarea\n                  placeholder=\"Deskripsi\"\n                  id=\"exampleFormControlTextarea1\"\n                  rows=\"3\"\n                  onChange={(e) => {\n                    setDeskripsi(e.target.value)\n                  }}\n                ></CFormTextarea>\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  type=\"number\"\n                  required\n                  placeholder=\"Harga\"\n                  onChange={(e) => {\n                    setHarga(e.target.value)\n                  }}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  type=\"number\"\n                  required\n                  placeholder=\"Diskon\"\n                  onChange={(e) => {\n                    setDiskon(e.target.value)\n                  }}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CInputGroupText component=\"label\" htmlFor=\"ketersediaan\">\n                  Ketersediaan\n                </CInputGroupText>\n                <CFormSelect\n                  placeholder=\"Ketersediaan\"\n                  id=\"ketersediaan\"\n                  onChange={(e) => {\n                    setTersedia(e.target.value)\n                  }}\n                >\n                  <option value=\"1\">Tersedia</option>\n                  <option value=\"0\">Belum Tersedia</option>\n                </CFormSelect>\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  type=\"file\"\n                  id=\"gambar\"\n                  placeholder=\"Gambar\"\n                  onChange={(e) => {\n                    setGambar(e.target.files[0])\n                  }}\n                />\n                <CInputGroupText component=\"label\" htmlFor=\"gambar\">\n                  Gambar\n                </CInputGroupText>\n              </CInputGroup>\n              <CInputGroup>\n                <CButton color=\"primary\" type=\"submit\">\n                  Simpan\n                </CButton>\n              </CInputGroup>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </div>\n    </CRow>\n  )\n}\n\nexport default TambahMenu\n"],"names":["_ref","color","body","_jsx","CToast","autohide","className","visible","children","_jsxs","CToastBody","CToastClose","white","useNavigate","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","toast","addToast","_useState5","_useState6","nama","setNama","_useState7","_useState8","deskripsi","setDeskripsi","_useState9","_useState10","harga","setHarga","_useState11","_useState12","diskon","setDiskon","_useState13","_useState14","tersedia","setTersedia","_useState15","_useState16","gambar","setGambar","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","addMenuReq","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","addMenu","sent","success","Toast","message","abrupt","stop","_x","apply","arguments","CSpinner","CRow","CToaster","push","placement","CCard","CCardHeader","CCardBody","CForm","onSubmit","CInputGroup","CFormInput","size","type","required","placeholder","onChange","e","target","value","CFormTextarea","id","rows","CInputGroupText","component","htmlFor","CFormSelect","files","CButton"],"sourceRoot":""}