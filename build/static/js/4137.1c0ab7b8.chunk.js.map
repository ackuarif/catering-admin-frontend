{"version":3,"file":"static/js/4137.1c0ab7b8.chunk.js","mappings":"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","sources":["components/Toast.js","views/admin/TambahAdmin.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CToast, CToastBody, CToastClose } from '@coreui/react'\n\nconst Toast = ({ color, body }) => {\n  return (\n    <CToast autohide={true} color={color} className=\"text-white align-items-center\" visible={true}>\n      <div className=\"d-flex\">\n        <CToastBody>{body}</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  )\n}\n\nToast.propTypes = {\n  color: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n}\n\nexport default Toast\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CRow,\n  CFormTextarea,\n  CInputGroupText,\n  CInputGroup,\n  CToaster,\n  CSpinner,\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { addAdmin, addMenu } from 'src/utils/api'\nimport Toast from 'src/components/Toast'\n\nconst TambahAdmin = () => {\n  const navigate = useNavigate()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [toast, addToast] = useState(0)\n\n  const [nama, setNama] = useState('')\n  const [user_id, setUserId] = useState('')\n  const [password, setPassword] = useState('')\n  const [password_confirm, setPasswordConfirm] = useState('')\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.stopPropagation()\n    }\n\n    setIsLoading(true)\n\n    const addAdminReq = await addAdmin({\n      nama,\n      user_id,\n      password,\n      password_confirm,\n    })\n\n    setIsLoading(false)\n\n    if (!addAdminReq.success) {\n      addToast(<Toast color=\"danger\" body={addAdminReq.message} />)\n      return\n    }\n    addToast(<Toast color=\"success\" body={addAdminReq.message} />)\n  }\n\n  if (isLoading) return <CSpinner color=\"primary\" />\n\n  return (\n    <CRow>\n      <CToaster push={toast} placement=\"top-end\" />\n      <div>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Tambah Admin</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm className=\"row g-3\" onSubmit={handleSubmit}>\n              <CInputGroup>\n                <CFormInput\n                  size=\"2\"\n                  type=\"text\"\n                  required\n                  placeholder=\"Nama\"\n                  onChange={(e) => {\n                    setNama(e.target.value)\n                  }}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  size=\"2\"\n                  type=\"text\"\n                  required\n                  placeholder=\"User ID\"\n                  onChange={(e) => {\n                    setUserId(e.target.value)\n                  }}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  size=\"2\"\n                  type=\"password\"\n                  required\n                  placeholder=\"Password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value)\n                  }}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CFormInput\n                  size=\"2\"\n                  type=\"password\"\n                  required\n                  placeholder=\"Konfirmasi Password\"\n                  onChange={(e) => {\n                    setPasswordConfirm(e.target.value)\n                  }}\n                />\n              </CInputGroup>\n              <CInputGroup>\n                <CButton color=\"primary\" type=\"submit\">\n                  Simpan\n                </CButton>\n              </CInputGroup>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </div>\n    </CRow>\n  )\n}\n\nexport default TambahAdmin\n"],"names":["_ref","color","body","_jsx","CToast","autohide","className","visible","children","_jsxs","CToastBody","CToastClose","white","useNavigate","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","toast","addToast","_useState5","_useState6","nama","setNama","_useState7","_useState8","user_id","setUserId","_useState9","_useState10","password","setPassword","_useState11","_useState12","password_confirm","setPasswordConfirm","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","addAdminReq","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","addAdmin","sent","success","Toast","message","abrupt","stop","_x","apply","arguments","CSpinner","CRow","CToaster","push","placement","CCard","CCardHeader","CCardBody","CForm","onSubmit","CInputGroup","CFormInput","size","type","required","placeholder","onChange","e","target","value","CButton"],"sourceRoot":""}