{"version":3,"file":"static/js/8193.ceb40cab.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\nconst Dashboard = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <WidgetsBrand withCharts />\n      <CRow>\n        <CCol sm={12} lg={6}>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CRow>\n                <CCol sm={5}>\n                  <h4 id=\"traffic\" className=\"card-title mb-0\">\n                    Traffic\n                  </h4>\n                  <div className=\"small text-medium-emphasis\">January - July 2021</div>\n                </CCol>\n              </CRow>\n              <CChartLine\n                style={{ height: '300px', marginTop: '40px' }}\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      label: 'My First dataset',\n                      backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                      borderColor: getStyle('--cui-info'),\n                      pointHoverBackgroundColor: getStyle('--cui-info'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                      fill: true,\n                    },\n                    {\n                      label: 'My Second dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: getStyle('--cui-success'),\n                      pointHoverBackgroundColor: getStyle('--cui-success'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                    },\n                    {\n                      label: 'My Third dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: getStyle('--cui-danger'),\n                      pointHoverBackgroundColor: getStyle('--cui-danger'),\n                      borderWidth: 1,\n                      borderDash: [8, 5],\n                      data: [65, 65, 65, 65, 65, 65, 65],\n                    },\n                  ],\n                }}\n                options={{\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  scales: {\n                    x: {\n                      grid: {\n                        drawOnChartArea: false,\n                      },\n                    },\n                    y: {\n                      ticks: {\n                        beginAtZero: true,\n                        maxTicksLimit: 5,\n                        stepSize: Math.ceil(250 / 5),\n                        max: 250,\n                      },\n                    },\n                  },\n                  elements: {\n                    line: {\n                      tension: 0.4,\n                    },\n                    point: {\n                      radius: 0,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                      hoverBorderWidth: 3,\n                    },\n                  },\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol sm={12} lg={6}>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CRow>\n                <CCol sm={5}>\n                  <h4 id=\"traffic\" className=\"card-title mb-0\">\n                    Traffic\n                  </h4>\n                  <div className=\"small text-medium-emphasis\">January - July 2021</div>\n                </CCol>\n              </CRow>\n              <CChartLine\n                style={{ height: '300px', marginTop: '40px' }}\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      label: 'My First dataset',\n                      backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                      borderColor: getStyle('--cui-info'),\n                      pointHoverBackgroundColor: getStyle('--cui-info'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                      fill: true,\n                    },\n                    {\n                      label: 'My Second dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: getStyle('--cui-success'),\n                      pointHoverBackgroundColor: getStyle('--cui-success'),\n                      borderWidth: 2,\n                      data: [\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                        random(50, 200),\n                      ],\n                    },\n                    {\n                      label: 'My Third dataset',\n                      backgroundColor: 'transparent',\n                      borderColor: getStyle('--cui-danger'),\n                      pointHoverBackgroundColor: getStyle('--cui-danger'),\n                      borderWidth: 1,\n                      borderDash: [8, 5],\n                      data: [65, 65, 65, 65, 65, 65, 65],\n                    },\n                  ],\n                }}\n                options={{\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  scales: {\n                    x: {\n                      grid: {\n                        drawOnChartArea: false,\n                      },\n                    },\n                    y: {\n                      ticks: {\n                        beginAtZero: true,\n                        maxTicksLimit: 5,\n                        stepSize: Math.ceil(250 / 5),\n                        max: 250,\n                      },\n                    },\n                  },\n                  elements: {\n                    line: {\n                      tension: 0.4,\n                    },\n                    point: {\n                      radius: 0,\n                      hitRadius: 10,\n                      hoverRadius: 4,\n                      hoverBorderWidth: 3,\n                    },\n                  },\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilBarChart, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\nimport { getJmlPemesananCurrentMonth, getJmlPemesananPrevMonth } from 'src/utils/api'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const [jmlPemesananCurrentMonth, setJmlPemesananCurrentMonth] = useState(0)\n  const [jmlPemesananPrevMonth, setJmlPemesananPrevMonth] = useState(0)\n\n  useEffect(() => {\n    componentDidMount()\n  }, [])\n\n  const componentDidMount = async () => {\n    const getJmlPemesananCurrentMonthReq = await getJmlPemesananCurrentMonth()\n    const getJmlPemesananPrevMonthReq = await getJmlPemesananPrevMonth()\n    setJmlPemesananCurrentMonth(getJmlPemesananCurrentMonthReq.data)\n    setJmlPemesananPrevMonth(getJmlPemesananPrevMonthReq.data)\n  }\n\n  return (\n    <CRow>\n      <CCol sm={12} lg={6}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          icon={<CIcon icon={cilBarChart} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'Pemesanan Bulan Ini', value: jmlPemesananCurrentMonth },\n            { title: 'Pemesanan Bulan Kemarin', value: jmlPemesananPrevMonth },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={12} lg={6}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'items', value: '3' },\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n            { title: 'meet', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Sessions\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["random","min","max","Math","floor","cilUser","cilUserFemale","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","cifUs","cibCcMastercard","cifBr","cibCcVisa","cifIn","cibCcStripe","cifFr","cibCcPaypal","cifEs","cibCcApplePay","cifPl","cibCcAmex","_jsxs","_Fragment","children","_jsx","WidgetsBrand","withCharts","CRow","CCol","sm","lg","CCard","className","CCardBody","id","CChartLine","style","height","marginTop","data","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","_ref","_useState","useState","_useState2","_slicedToArray","jmlPemesananCurrentMonth","setJmlPemesananCurrentMonth","_useState3","_useState4","jmlPemesananPrevMonth","setJmlPemesananPrevMonth","useEffect","componentDidMount","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","getJmlPemesananCurrentMonthReq","getJmlPemesananPrevMonthReq","wrap","_context","prev","next","getJmlPemesananCurrentMonth","sent","getJmlPemesananPrevMonth","stop","apply","arguments","CWidgetStatsD","icon","CIcon","cilBarChart","values","title","value","color","cilCalendar","CWidgetStatsA","cilArrowBottom","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","chart","pointBackgroundColor","drawBorder","cilArrowTop","CChartBar","barPercentage","drawTicks"],"sourceRoot":""}